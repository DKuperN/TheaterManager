Все данные (по пользователям, эвентам и т.п. пишутся в БД) - MySQL
Схема БД (MySQL) находится в db_buc.sql

HW-2:
- вызов сервисов из DAO вынесены куда надо

Новые тесты:
- загрузка бинов в контейнер происходит через аннотации и AnnotationBeans.java
- CounterAspect - подсчет количества вызова различных методов
- DiscountAspect - подсчет выданных скидок
!!!!! NOTE !!!!!
т.к. работа сервисов оценивается тестами,
то подсчет разных параметров аспектами будет не верным
(тесты дергают отдельные методы, а не работают постоянно).


Что было:

Для начала работы (тестирования) надо добавить как минимум:
- настроить соединение с MySql сервером (в mysql-connection.xml);
- импортнуть схему (Схема БД (MySQL) находится в db_buc.sql);
- добавить начальные тестовые данные, для этого надо запустить файлы типа GenerateTestData (лежит в пекете с тестами)

После этого можно запускать любые тесты, все должно работать.

ContextCreationTestCase - проверка корректности создания бинов/контекста

- проверка работы UserService:
TestUserService - поиск юзера по имени, по емаилу, по id, получение всех пользователей
CleanTestUserData - проверка удаления пользователя
CreateTestUser - создание пользователя

- проверка работы EventService
CreateTestEvent - создание нового эвента
TestEventService - получение эвента по имение, получение всех эвентов
RemoveTestEvent - удаление эвента

- проверка работы AuditoriumService
получение вип мест;
получение всех аудиторий;
получение аудитории по имени;
получение вместительности аудитории

- проверка работы BookingService
BookingEventTest - регистрации (покупки) билета и получения купленных билетов

Вспомогательные тесты:
TestDiscountService - проверка работы получения скидки исходя из стратегии*

*
//TODO будет время надо будет доделать
- Не реализована бизнесс логика выдачи скидок, НО выдается наибольная сумма скидка исходя из стратегии
- Использование скидок (ДР или определенный билет со скидкой) задается через true/false в конструкторе в discountStrategy.xml
(позже будет переделано на проперти)
